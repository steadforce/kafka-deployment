suite: test some attributes of the kafka brokers
capabilities:
  apiVersions:
    - kafka.strimzi.io/v1beta2/KafkaNodePool
templates:
  - templates/kafka-brokers.yaml
tests:

- it: kafka container resources should not be set for local cluster
  values:
  - ../values-local.yaml
  asserts:
  - matchRegex:
      path: spec.resources.limits.cpu
      # on local cluster we expect 0 or 0m cpu limits but stimzi doesn't support it
      pattern: "^0.*"
  - matchRegex:
      path: spec.resources.limits.memory
      # on local cluster we expect non 0 memory limits
      pattern: "^[1-9].*"
  - matchRegex:
      path: spec.resources.requests.cpu
      # on local cluster we expect 0 or 0m cpu requests but stimzi doesn't support it
      pattern: "^0.*"
  - matchRegex:
      path: spec.resources.requests.memory
      # on local cluster we expect 0 or 0Mi 0Gi memory requests but stimzi doesn't support it
      pattern: "^0.*"
  - matchSnapshot: {}

- it: kafka container resources should be set for development cluster
  values:
  - ../values-development.yaml
  asserts: &kafkaResourcesAsserts
  - matchRegex:
      path: spec.resources.limits.cpu
      # on non-local cluster we expect non 0 cpu limits
      pattern: "^[1-9].*"
  - matchRegex:
      path: spec.resources.limits.memory
      # on non-local cluster we expect non 0 memory limits
      pattern: "^[1-9].*"
  - matchRegex:
      path: spec.resources.requests.cpu
      # on non-local cluster we expect non 0 cpu requests
      pattern: "^[1-9].*"
  - matchRegex:
      path: spec.resources.requests.memory
      # on non-local cluster we expect non 0 memory requests
      pattern: "^[1-9].*"
  - matchSnapshot: {}

- it: kafka container resources should be set for production cluster
  values:
  - ../values-production.yaml
  asserts: *kafkaResourcesAsserts

- it: kafka broker name
  asserts:
  - equal:
      path: metadata.name
      value: kafka
  - matchSnapshot: {}
